{"creation_time": "2024-03-04T22:23:01+00:00", "days_back": 7, "models": {"model.jaffle_shop.stg_customers": {"name": "stg_customers", "unique_id": "model.jaffle_shop.stg_customers", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/staging/jaffle_shop/stg_customers.sql", "meta": {}, "materialization": "view", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_customers", "patch_path": "jaffle_shop://models/staging/jaffle_shop/stg_jaffle_shop.yml", "model_name": "stg_customers", "normalized_full_path": "jaffle_shop/models/staging/jaffle_shop/stg_customers.sql", "fqn": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_customers", "artifact_type": "model"}, "model.jaffle_shop.stg_orders": {"name": "stg_orders", "unique_id": "model.jaffle_shop.stg_orders", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/staging/jaffle_shop/stg_orders.sql", "meta": {}, "materialization": "view", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_orders", "patch_path": "jaffle_shop://models/staging/jaffle_shop/stg_jaffle_shop.yml", "model_name": "stg_orders", "normalized_full_path": "jaffle_shop/models/staging/jaffle_shop/stg_orders.sql", "fqn": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_orders", "artifact_type": "model"}, "model.jaffle_shop.stg_payments": {"name": "stg_payments", "unique_id": "model.jaffle_shop.stg_payments", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/staging/stripe/stg_payments.sql", "meta": {}, "materialization": "view", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_payments", "patch_path": null, "model_name": "stg_payments", "normalized_full_path": "jaffle_shop/models/staging/stripe/stg_payments.sql", "fqn": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_payments", "artifact_type": "model"}, "model.jaffle_shop.dim_customers": {"name": "dim_customers", "unique_id": "model.jaffle_shop.dim_customers", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/marts/core/dim_customers.sql", "meta": {}, "materialization": "table", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "dim_customers", "patch_path": null, "model_name": "dim_customers", "normalized_full_path": "jaffle_shop/models/marts/core/dim_customers.sql", "fqn": "dbt_fundamentals_ag_analytics.bdc_agramigna.dim_customers", "artifact_type": "model"}, "model.jaffle_shop.fct_orders": {"name": "fct_orders", "unique_id": "model.jaffle_shop.fct_orders", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/marts/core/fct_orders.sql", "meta": {}, "materialization": "table", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "fct_orders", "patch_path": "jaffle_shop://models/marts/core/fct_orders.yml", "model_name": "fct_orders", "normalized_full_path": "jaffle_shop/models/marts/core/fct_orders.sql", "fqn": "dbt_fundamentals_ag_analytics.bdc_agramigna.fct_orders", "artifact_type": "model"}, "source.jaffle_shop.jaffle_shop.customers": {"name": "customers", "unique_id": "source.jaffle_shop.jaffle_shop.customers", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/staging/jaffle_shop/src_jaffle_shop.yml", "meta": {}, "materialization": null, "source_name": "jaffle_shop", "database_name": "raw", "schema_name": "jaffle_shop", "table_name": "customers", "model_name": "customers", "normalized_full_path": "jaffle_shop/sources/staging/jaffle_shop/src_jaffle_shop.yml", "fqn": "raw.jaffle_shop.customers", "artifact_type": "source"}, "source.jaffle_shop.jaffle_shop.orders": {"name": "orders", "unique_id": "source.jaffle_shop.jaffle_shop.orders", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/staging/jaffle_shop/src_jaffle_shop.yml", "meta": {}, "materialization": null, "source_name": "jaffle_shop", "database_name": "raw", "schema_name": "jaffle_shop", "table_name": "orders", "model_name": "orders", "normalized_full_path": "jaffle_shop/sources/staging/jaffle_shop/src_jaffle_shop.yml", "fqn": "raw.jaffle_shop.orders", "artifact_type": "source"}, "source.jaffle_shop.stripe.payment": {"name": "payment", "unique_id": "source.jaffle_shop.stripe.payment", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/staging/stripe/src_stripe.yml", "meta": {}, "materialization": null, "source_name": "stripe", "database_name": "raw", "schema_name": "stripe", "table_name": "payment", "model_name": "payment", "normalized_full_path": "jaffle_shop/sources/staging/stripe/src_stripe.yml", "fqn": "raw.stripe.payment", "artifact_type": "source"}}, "groups": {"dbt": {"jaffle_shop": {"models": {"staging": {"jaffle_shop": {"__files__": [{"node_id": "model.jaffle_shop.stg_customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_orders", "resource_type": "model"}]}, "stripe": {"__files__": [{"node_id": "model.jaffle_shop.stg_payments", "resource_type": "model"}]}}, "marts": {"core": {"__files__": [{"node_id": "model.jaffle_shop.dim_customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.fct_orders", "resource_type": "model"}]}}}, "sources": {"staging": {"jaffle_shop": {"__files__": [{"node_id": "source.jaffle_shop.jaffle_shop.customers", "resource_type": "source"}, {"node_id": "source.jaffle_shop.jaffle_shop.orders", "resource_type": "source"}]}, "stripe": {"__files__": [{"node_id": "source.jaffle_shop.stripe.payment", "resource_type": "source"}]}}}}}, "tags": {"No tags": [{"node_id": "model.jaffle_shop.stg_customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_orders", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_payments", "resource_type": "model"}, {"node_id": "model.jaffle_shop.dim_customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.fct_orders", "resource_type": "model"}, {"node_id": "source.jaffle_shop.jaffle_shop.customers", "resource_type": "source"}, {"node_id": "source.jaffle_shop.jaffle_shop.orders", "resource_type": "source"}, {"node_id": "source.jaffle_shop.stripe.payment", "resource_type": "source"}]}, "owners": {"No owners": [{"node_id": "model.jaffle_shop.stg_customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_orders", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_payments", "resource_type": "model"}, {"node_id": "model.jaffle_shop.dim_customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.fct_orders", "resource_type": "model"}, {"node_id": "source.jaffle_shop.jaffle_shop.customers", "resource_type": "source"}, {"node_id": "source.jaffle_shop.jaffle_shop.orders", "resource_type": "source"}, {"node_id": "source.jaffle_shop.stripe.payment", "resource_type": "source"}]}}, "invocation": {"invocation_id": null, "detected_at": null, "command": null, "selected": null, "full_refresh": null, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}, "test_results": {"model.jaffle_shop.stg_payments": [{"metadata": {"test_unique_id": "test.jaffle_shop.assert_positive_total_payments", "elementary_unique_id": "test.jaffle_shop.assert_positive_total_payments.None.singular", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_payments", "column_name": null, "test_name": "assert_positive_total_payments", "test_display_name": "Assert Positive Total Payments", "latest_run_time": "2024-03-04T16:20:55-06:00", "latest_run_time_utc": "2024-03-04T22:20:55+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_payments", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_payments", "test_type": "dbt_test", "test_sub_type": "singular", "test_query": "-- Refunds have a negative amount, so the total amount should always be >= 0.\n-- Therefore return records where this isn't true to make the test fail.\nselect\n    order_id\n    , sum(amount) as total_amount\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_payments\ngroup by 1\nhaving not (total_amount >= 0)", "test_params": {}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "-- Refunds have a negative amount, so the total amount should always be >= 0.\n-- Therefore return records where this isn't true to make the test fail.\nselect\n    order_id\n    , sum(amount) as total_amount\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_payments\ngroup by 1\nhaving not (total_amount >= 0)"}, "configuration": {"test_name": "assert_positive_total_payments", "test_params": {}}, "test_tags": []}, "test_results": {"display_name": "assert_positive_total_payments", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.jaffle_shop.fct_orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.not_null_fct_orders_amount.66810a8d08", "elementary_unique_id": "test.jaffle_shop.not_null_fct_orders_amount.66810a8d08.amount.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "fct_orders", "column_name": "amount", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:21:12-06:00", "latest_run_time_utc": "2024-03-04T22:21:12+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.fct_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.fct_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select amount\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere amount is null", "test_params": {"column_name": "amount", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select amount\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "amount", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}}, "test_tags": []}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_fct_orders_customer_id.16fe324f7b", "elementary_unique_id": "test.jaffle_shop.not_null_fct_orders_customer_id.16fe324f7b.customer_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "fct_orders", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:21:13-06:00", "latest_run_time_utc": "2024-03-04T22:21:13+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.fct_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.fct_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}}, "test_tags": []}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_fct_orders_order_id.523ddb6ce5", "elementary_unique_id": "test.jaffle_shop.unique_fct_orders_order_id.523ddb6ce5.order_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "fct_orders", "column_name": "order_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2024-03-04T16:21:14-06:00", "latest_run_time_utc": "2024-03-04T22:21:14+00:00", "latest_run_status": "fail", "model_unique_id": "model.jaffle_shop.fct_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.fct_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Got 99 results, configured to fail if != 0", "result_query": "select\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}}, "test_tags": []}, "test_results": {"display_name": "unique", "results_sample": [{"unique_field": 1, "n_records": 2}, {"unique_field": 2, "n_records": 2}, {"unique_field": 3, "n_records": 2}, {"unique_field": 4, "n_records": 2}, {"unique_field": 5, "n_records": 2}], "error_message": "Got 99 results, configured to fail if != 0", "failed_rows_count": 99}}], "model.jaffle_shop.stg_orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__completed__shipped__returned__return_pending__placed.89a0a7d5f1", "elementary_unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__completed__shipped__returned__return_pending__placed.89a0a7d5f1.status.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_orders", "column_name": "status", "test_name": "accepted_values", "test_display_name": "Accepted Values", "latest_run_time": "2024-03-04T16:21:05-06:00", "latest_run_time_utc": "2024-03-04T22:21:05+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','shipped','returned','return_pending','placed'\n)", "test_params": {"values": ["completed", "shipped", "returned", "return_pending", "placed"], "column_name": "status", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','shipped','returned','return_pending','placed'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["completed", "shipped", "returned", "return_pending", "placed"], "column_name": "status", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": []}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64", "elementary_unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64.order_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_orders", "column_name": "order_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:21:06-06:00", "latest_run_time_utc": "2024-03-04T22:21:06+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select order_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\nwhere order_id is null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select order_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\nwhere order_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": []}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.relationships_stg_orders_customer_id__customer_id__ref_stg_customers_.430bf21500", "elementary_unique_id": "test.jaffle_shop.relationships_stg_orders_customer_id__customer_id__ref_stg_customers_.430bf21500.customer_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_orders", "column_name": "customer_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2024-03-04T16:21:07-06:00", "latest_run_time_utc": "2024-03-04T22:21:07+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select customer_id as from_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('stg_customers')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select customer_id as from_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('stg_customers')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": []}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.relationships_stg_orders_order_id__customer_id__ref_stg_customers_.7f2a5364ff", "elementary_unique_id": "test.jaffle_shop.relationships_stg_orders_order_id__customer_id__ref_stg_customers_.7f2a5364ff.order_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_orders", "column_name": "order_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2024-03-04T16:21:09-06:00", "latest_run_time_utc": "2024-03-04T22:21:09+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select order_id as from_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    where order_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('stg_customers')", "field": "customer_id", "column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select order_id as from_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    where order_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('stg_customers')", "field": "customer_id", "column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": []}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.jaffle_shop.stg_customers": [{"metadata": {"test_unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa", "elementary_unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa.customer_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_customers", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:21:03-06:00", "latest_run_time_utc": "2024-03-04T22:21:03+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_customers", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}}, "test_tags": []}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "source.jaffle_shop.jaffle_shop.customers": [{"metadata": {"test_unique_id": "test.jaffle_shop.source_not_null_jaffle_shop_customers_id.50aa22178f", "elementary_unique_id": "test.jaffle_shop.source_not_null_jaffle_shop_customers_id.50aa22178f.id.generic", "database_name": "raw", "schema_name": "jaffle_shop", "table_name": "customers", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:20:27-06:00", "latest_run_time_utc": "2024-03-04T22:20:27+00:00", "latest_run_status": "pass", "model_unique_id": "source.jaffle_shop.jaffle_shop.customers", "table_unique_id": "raw.jaffle_shop.customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom raw.jaffle_shop.customers\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('jaffle_shop', 'customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom raw.jaffle_shop.customers\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('jaffle_shop', 'customers')) }}"}}, "test_tags": []}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "source.jaffle_shop.jaffle_shop.orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.source_not_null_jaffle_shop_orders_id.f924998b13", "elementary_unique_id": "test.jaffle_shop.source_not_null_jaffle_shop_orders_id.f924998b13.id.generic", "database_name": "raw", "schema_name": "jaffle_shop", "table_name": "orders", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:20:28-06:00", "latest_run_time_utc": "2024-03-04T22:20:28+00:00", "latest_run_status": "pass", "model_unique_id": "source.jaffle_shop.jaffle_shop.orders", "table_unique_id": "raw.jaffle_shop.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom raw.jaffle_shop.orders\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('jaffle_shop', 'orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom raw.jaffle_shop.orders\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('jaffle_shop', 'orders')) }}"}}, "test_tags": []}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}]}, "test_results_totals": {"model.jaffle_shop.stg_payments": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.jaffle_shop.fct_orders": {"errors": 0, "warnings": 0, "passed": 2, "failures": 1}, "model.jaffle_shop.stg_orders": {"errors": 0, "warnings": 0, "passed": 4, "failures": 0}, "model.jaffle_shop.stg_customers": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "source.jaffle_shop.jaffle_shop.customers": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "source.jaffle_shop.jaffle_shop.orders": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}}, "test_runs": {"model.jaffle_shop.stg_payments": [{"metadata": {"test_unique_id": "test.jaffle_shop.assert_positive_total_payments", "elementary_unique_id": "test.jaffle_shop.assert_positive_total_payments.None.singular", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_payments", "column_name": null, "test_name": "assert_positive_total_payments", "test_display_name": "Assert Positive Total Payments", "latest_run_time": "2024-03-04T16:20:55-06:00", "latest_run_time_utc": "2024-03-04T22:20:55+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_payments", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_payments", "test_type": "dbt_test", "test_sub_type": "singular", "test_query": "-- Refunds have a negative amount, so the total amount should always be >= 0.\n-- Therefore return records where this isn't true to make the test fail.\nselect\n    order_id\n    , sum(amount) as total_amount\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_payments\ngroup by 1\nhaving not (total_amount >= 0)", "test_params": {}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "-- Refunds have a negative amount, so the total amount should always be >= 0.\n-- Therefore return records where this isn't true to make the test fail.\nselect\n    order_id\n    , sum(amount) as total_amount\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_payments\ngroup by 1\nhaving not (total_amount >= 0)"}, "configuration": {"test_name": "assert_positive_total_payments", "test_params": {}}, "test_tags": []}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-03-04T19:29:08+00:00", "id": "6b538808-c72e-4187-8939-7c170fa83ccc", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:39:51+00:00", "id": "883f5496-fdd1-4cbd-810d-2a6d81fa586c", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:55:36+00:00", "id": "a0fe0a56-0e64-4e9c-b699-35e87b59a339", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:59:34+00:00", "id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:15:31+00:00", "id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:20:55+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 6 test runs."}}], "model.jaffle_shop.fct_orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.not_null_fct_orders_amount.66810a8d08", "elementary_unique_id": "test.jaffle_shop.not_null_fct_orders_amount.66810a8d08.amount.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "fct_orders", "column_name": "amount", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:21:12-06:00", "latest_run_time_utc": "2024-03-04T22:21:12+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.fct_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.fct_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select amount\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere amount is null", "test_params": {"column_name": "amount", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select amount\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "amount", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}}, "test_tags": []}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-03-04T22:21:12+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_fct_orders_customer_id.16fe324f7b", "elementary_unique_id": "test.jaffle_shop.not_null_fct_orders_customer_id.16fe324f7b.customer_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "fct_orders", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:21:13-06:00", "latest_run_time_utc": "2024-03-04T22:21:13+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.fct_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.fct_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}}, "test_tags": []}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-03-04T22:21:13+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_fct_orders_order_id.523ddb6ce5", "elementary_unique_id": "test.jaffle_shop.unique_fct_orders_order_id.523ddb6ce5.order_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "fct_orders", "column_name": "order_id", "test_name": "unique", "test_display_name": "Unique", "latest_run_time": "2024-03-04T16:21:14-06:00", "latest_run_time_utc": "2024-03-04T22:21:14+00:00", "latest_run_status": "fail", "model_unique_id": "model.jaffle_shop.fct_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.fct_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Got 99 results, configured to fail if != 0", "result_query": "select\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.fct_orders\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('fct_orders')) }}"}}, "test_tags": []}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 0, "warnings": 0, "passed": 0, "failures": 1}, "invocations": [{"affected_rows": 99, "time_utc": "2024-03-04T22:21:14+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "fail"}], "description": "There were 1 failures, no errors and no warnings on the last 1 test runs."}}], "model.jaffle_shop.stg_orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__completed__shipped__returned__return_pending__placed.89a0a7d5f1", "elementary_unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__completed__shipped__returned__return_pending__placed.89a0a7d5f1.status.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_orders", "column_name": "status", "test_name": "accepted_values", "test_display_name": "Accepted Values", "latest_run_time": "2024-03-04T16:21:05-06:00", "latest_run_time_utc": "2024-03-04T22:21:05+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','shipped','returned','return_pending','placed'\n)", "test_params": {"values": ["completed", "shipped", "returned", "return_pending", "placed"], "column_name": "status", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed','shipped','returned','return_pending','placed'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["completed", "shipped", "returned", "return_pending", "placed"], "column_name": "status", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": []}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-03-04T19:29:05+00:00", "id": "6b538808-c72e-4187-8939-7c170fa83ccc", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:39:50+00:00", "id": "883f5496-fdd1-4cbd-810d-2a6d81fa586c", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:55:34+00:00", "id": "a0fe0a56-0e64-4e9c-b699-35e87b59a339", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:59:46+00:00", "id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:15:45+00:00", "id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:21:05+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 6 test runs."}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64", "elementary_unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64.order_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_orders", "column_name": "order_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:21:06-06:00", "latest_run_time_utc": "2024-03-04T22:21:06+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select order_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\nwhere order_id is null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select order_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\nwhere order_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": []}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-03-04T19:29:11+00:00", "id": "6b538808-c72e-4187-8939-7c170fa83ccc", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:39:54+00:00", "id": "883f5496-fdd1-4cbd-810d-2a6d81fa586c", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:55:39+00:00", "id": "a0fe0a56-0e64-4e9c-b699-35e87b59a339", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:59:48+00:00", "id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:15:47+00:00", "id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:21:06+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 6 test runs."}}, {"metadata": {"test_unique_id": "test.jaffle_shop.relationships_stg_orders_customer_id__customer_id__ref_stg_customers_.430bf21500", "elementary_unique_id": "test.jaffle_shop.relationships_stg_orders_customer_id__customer_id__ref_stg_customers_.430bf21500.customer_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_orders", "column_name": "customer_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2024-03-04T16:21:07-06:00", "latest_run_time_utc": "2024-03-04T22:21:07+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select customer_id as from_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('stg_customers')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select customer_id as from_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('stg_customers')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": []}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-03-04T19:29:12+00:00", "id": "6b538808-c72e-4187-8939-7c170fa83ccc", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:39:55+00:00", "id": "883f5496-fdd1-4cbd-810d-2a6d81fa586c", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:55:40+00:00", "id": "a0fe0a56-0e64-4e9c-b699-35e87b59a339", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:59:49+00:00", "id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:15:48+00:00", "id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:21:07+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 6 test runs."}}, {"metadata": {"test_unique_id": "test.jaffle_shop.relationships_stg_orders_order_id__customer_id__ref_stg_customers_.7f2a5364ff", "elementary_unique_id": "test.jaffle_shop.relationships_stg_orders_order_id__customer_id__ref_stg_customers_.7f2a5364ff.order_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_orders", "column_name": "order_id", "test_name": "relationships", "test_display_name": "Relationships", "latest_run_time": "2024-03-04T16:21:09-06:00", "latest_run_time_utc": "2024-03-04T22:21:09+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select order_id as from_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    where order_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('stg_customers')", "field": "customer_id", "column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select order_id as from_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    where order_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('stg_customers')", "field": "customer_id", "column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": []}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-03-04T19:29:13+00:00", "id": "6b538808-c72e-4187-8939-7c170fa83ccc", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:39:56+00:00", "id": "883f5496-fdd1-4cbd-810d-2a6d81fa586c", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:55:42+00:00", "id": "a0fe0a56-0e64-4e9c-b699-35e87b59a339", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:59:50+00:00", "id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:15:50+00:00", "id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:21:09+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 6 test runs."}}], "model.jaffle_shop.stg_customers": [{"metadata": {"test_unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa", "elementary_unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa.customer_id.generic", "database_name": "DBT_FUNDAMENTALS_AG_ANALYTICS", "schema_name": "BDC_AGRAMIGNA", "table_name": "stg_customers", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:21:03-06:00", "latest_run_time_utc": "2024-03-04T22:21:03+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_customers", "table_unique_id": "dbt_fundamentals_ag_analytics.bdc_agramigna.stg_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_customers\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}}, "test_tags": []}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-03-04T19:29:09+00:00", "id": "6b538808-c72e-4187-8939-7c170fa83ccc", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:39:52+00:00", "id": "883f5496-fdd1-4cbd-810d-2a6d81fa586c", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:55:37+00:00", "id": "a0fe0a56-0e64-4e9c-b699-35e87b59a339", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:59:44+00:00", "id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:15:43+00:00", "id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:21:03+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 6 test runs."}}], "source.jaffle_shop.jaffle_shop.customers": [{"metadata": {"test_unique_id": "test.jaffle_shop.source_not_null_jaffle_shop_customers_id.50aa22178f", "elementary_unique_id": "test.jaffle_shop.source_not_null_jaffle_shop_customers_id.50aa22178f.id.generic", "database_name": "raw", "schema_name": "jaffle_shop", "table_name": "customers", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:20:27-06:00", "latest_run_time_utc": "2024-03-04T22:20:27+00:00", "latest_run_status": "pass", "model_unique_id": "source.jaffle_shop.jaffle_shop.customers", "table_unique_id": "raw.jaffle_shop.customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom raw.jaffle_shop.customers\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('jaffle_shop', 'customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom raw.jaffle_shop.customers\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('jaffle_shop', 'customers')) }}"}}, "test_tags": []}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-03-04T19:29:15+00:00", "id": "6b538808-c72e-4187-8939-7c170fa83ccc", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:39:57+00:00", "id": "883f5496-fdd1-4cbd-810d-2a6d81fa586c", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:55:43+00:00", "id": "a0fe0a56-0e64-4e9c-b699-35e87b59a339", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:59:09+00:00", "id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:15:06+00:00", "id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:20:27+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 6 test runs."}}], "source.jaffle_shop.jaffle_shop.orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.source_not_null_jaffle_shop_orders_id.f924998b13", "elementary_unique_id": "test.jaffle_shop.source_not_null_jaffle_shop_orders_id.f924998b13.id.generic", "database_name": "raw", "schema_name": "jaffle_shop", "table_name": "orders", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "latest_run_time": "2024-03-04T16:20:28-06:00", "latest_run_time_utc": "2024-03-04T22:20:28+00:00", "latest_run_status": "pass", "model_unique_id": "source.jaffle_shop.jaffle_shop.orders", "table_unique_id": "raw.jaffle_shop.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom raw.jaffle_shop.orders\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('jaffle_shop', 'orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom raw.jaffle_shop.orders\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('jaffle_shop', 'orders')) }}"}}, "test_tags": []}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-03-04T19:29:16+00:00", "id": "6b538808-c72e-4187-8939-7c170fa83ccc", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:39:59+00:00", "id": "883f5496-fdd1-4cbd-810d-2a6d81fa586c", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:55:44+00:00", "id": "a0fe0a56-0e64-4e9c-b699-35e87b59a339", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T21:59:10+00:00", "id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:15:08+00:00", "id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "status": "pass"}, {"affected_rows": null, "time_utc": "2024-03-04T22:20:28+00:00", "id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "status": "pass"}], "description": "There were no failures, no errors and no warnings on the last 6 test runs."}}]}, "test_runs_totals": {"model.jaffle_shop.stg_payments": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "model.jaffle_shop.fct_orders": {"errors": 0, "warnings": 0, "passed": 2, "failures": 1}, "model.jaffle_shop.stg_orders": {"errors": 0, "warnings": 0, "passed": 24, "failures": 0}, "model.jaffle_shop.stg_customers": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "source.jaffle_shop.jaffle_shop.customers": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}, "source.jaffle_shop.jaffle_shop.orders": {"errors": 0, "warnings": 0, "passed": 6, "failures": 0}}, "coverages": {"model.jaffle_shop.stg_payments": {"table_tests": 1, "column_tests": 0}, "model.jaffle_shop.stg_customers": {"table_tests": 0, "column_tests": 1}, "model.jaffle_shop.stg_orders": {"table_tests": 0, "column_tests": 4}, "source.jaffle_shop.jaffle_shop.customers": {"table_tests": 0, "column_tests": 1}, "source.jaffle_shop.jaffle_shop.orders": {"table_tests": 0, "column_tests": 1}, "model.jaffle_shop.fct_orders": {"table_tests": 0, "column_tests": 3}}, "model_runs": [{"unique_id": "model.jaffle_shop.stg_orders", "schema": "BDC_AGRAMIGNA", "name": "stg_orders", "status": "success", "last_exec_time": 1.3, "median_exec_time": 1.65, "compiled_code": "with\n    orders as (\n\n        select\n            id as order_id\n            , user_id as customer_id\n            , order_date\n            , status\n\n        from raw.jaffle_shop.orders\n    )\n\nselect * from orders", "last_generated_at": "2024-03-04T22:21:18+00:00", "exec_time_change_rate": -21.212121212121204, "totals": {"errors": 0, "success": 4}, "runs": [{"id": "fadbaf3e-f376-46f3-aeb8-de332cf05271", "time_utc": "2024-03-04T21:42:50+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.6}, {"id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "time_utc": "2024-03-04T21:59:58+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.7}, {"id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "time_utc": "2024-03-04T22:15:58+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.6}, {"id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "time_utc": "2024-03-04T22:21:18+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.3}]}, {"unique_id": "model.jaffle_shop.stg_payments", "schema": "BDC_AGRAMIGNA", "name": "stg_payments", "status": "success", "last_exec_time": 1.3, "median_exec_time": 1.3, "compiled_code": "select\n    id as payment_id\n    , orderid as order_id\n    , paymentmethod as payment_method\n    , status\n\n    -- amount is stored in cents, convert it to dollars\n    , amount / 100 as amount\n    , created as created_at\n\nfrom raw.stripe.payment", "last_generated_at": "2024-03-04T22:21:18+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 4}, "runs": [{"id": "fadbaf3e-f376-46f3-aeb8-de332cf05271", "time_utc": "2024-03-04T21:42:50+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.3}, {"id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "time_utc": "2024-03-04T21:59:58+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.4}, {"id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "time_utc": "2024-03-04T22:15:58+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.3}, {"id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "time_utc": "2024-03-04T22:21:18+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.3}]}, {"unique_id": "model.jaffle_shop.fct_orders", "schema": "BDC_AGRAMIGNA", "name": "fct_orders", "status": "success", "last_exec_time": 1.8, "median_exec_time": 2.0, "compiled_code": "with\n    orders as (\n        select * from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_orders\n    )\n\n    , payments as (\n        select * from DBT_FUNDAMENTALS_AG_ANALYTICS.BDC_AGRAMIGNA.stg_payments\n    )\n\n    , order_payments as (\n        select\n            order_id\n            , sum(case when status = 'success' then amount end) as amount\n\n        from payments\n        group by 1\n    )\n\n    , final as (\n\n        select\n            orders.order_id\n            , orders.customer_id\n            , orders.order_date\n            , coalesce(order_payments.amount, 0) as amount\n\n        from orders\n        left join order_payments on orders.order_id = order_payments.order_id\n    )\n\nselect * from final\nunion all\nselect\n    508 as order_id\n    , 509 as customer_id\n    , date('2024-03-03') as order_date\n    , -1 as amount", "last_generated_at": "2024-03-04T22:21:18+00:00", "exec_time_change_rate": -9.999999999999998, "totals": {"errors": 0, "success": 4}, "runs": [{"id": "fadbaf3e-f376-46f3-aeb8-de332cf05271", "time_utc": "2024-03-04T21:42:50+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.3}, {"id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "time_utc": "2024-03-04T21:59:58+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.9}, {"id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "time_utc": "2024-03-04T22:15:58+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.1}, {"id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "time_utc": "2024-03-04T22:21:18+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.8}]}, {"unique_id": "model.jaffle_shop.dim_customers", "schema": "BDC_AGRAMIGNA", "name": "dim_customers", "status": "skipped", "last_exec_time": 0.0, "median_exec_time": 2.1, "compiled_code": null, "last_generated_at": "2024-03-04T22:21:18+00:00", "exec_time_change_rate": -100.0, "totals": {"errors": 0, "success": 3}, "runs": [{"id": "fadbaf3e-f376-46f3-aeb8-de332cf05271", "time_utc": "2024-03-04T21:42:50+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.1}, {"id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "time_utc": "2024-03-04T21:59:58+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.8}, {"id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "time_utc": "2024-03-04T22:15:58+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 3.1}, {"id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "time_utc": "2024-03-04T22:21:18+00:00", "status": "skipped", "full_refresh": false, "materialization": "table", "execution_time": 0.0}]}, {"unique_id": "model.jaffle_shop.stg_customers", "schema": "BDC_AGRAMIGNA", "name": "stg_customers", "status": "success", "last_exec_time": 1.4, "median_exec_time": 1.65, "compiled_code": "with\n    customers as (\n\n        select\n            id as customer_id\n            , first_name\n            , last_name\n\n        from raw.jaffle_shop.customers\n    )\n\nselect * from customers", "last_generated_at": "2024-03-04T22:21:18+00:00", "exec_time_change_rate": -15.151515151515149, "totals": {"errors": 0, "success": 4}, "runs": [{"id": "fadbaf3e-f376-46f3-aeb8-de332cf05271", "time_utc": "2024-03-04T21:42:50+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.8}, {"id": "494fce0f-5ba5-40ad-bd22-c5efb13a87a2", "time_utc": "2024-03-04T21:59:58+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.0}, {"id": "1ca1aa9d-d16b-4b95-80a9-2c9db3114b47", "time_utc": "2024-03-04T22:15:58+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.5}, {"id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "time_utc": "2024-03-04T22:21:18+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.4}]}], "model_runs_totals": {"model.jaffle_shop.stg_orders": {"errors": 0, "warnings": 0, "passed": 4, "failures": 0}, "model.jaffle_shop.stg_payments": {"errors": 0, "warnings": 0, "passed": 4, "failures": 0}, "model.jaffle_shop.fct_orders": {"errors": 0, "warnings": 0, "passed": 4, "failures": 0}, "model.jaffle_shop.dim_customers": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "model.jaffle_shop.stg_customers": {"errors": 0, "warnings": 0, "passed": 4, "failures": 0}}, "filters": {"test_results": [{"name": "failures", "display_name": "Failures", "model_unique_ids": ["model.jaffle_shop.fct_orders"]}, {"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.jaffle_shop.stg_orders", "model.jaffle_shop.stg_customers", "source.jaffle_shop.jaffle_shop.customers", "model.jaffle_shop.stg_payments", "model.jaffle_shop.fct_orders", "source.jaffle_shop.jaffle_shop.orders"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["source.jaffle_shop.stripe.payment", "model.jaffle_shop.dim_customers"]}], "test_runs": [{"name": "failures", "display_name": "Failures", "model_unique_ids": ["model.jaffle_shop.fct_orders"]}, {"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.jaffle_shop.stg_orders", "model.jaffle_shop.stg_customers", "source.jaffle_shop.jaffle_shop.customers", "model.jaffle_shop.stg_payments", "model.jaffle_shop.fct_orders", "source.jaffle_shop.jaffle_shop.orders"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["source.jaffle_shop.stripe.payment", "model.jaffle_shop.dim_customers"]}], "model_runs": [{"name": "success", "display_name": "Successful Runs", "model_unique_ids": ["model.jaffle_shop.dim_customers", "model.jaffle_shop.stg_orders", "model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_payments", "model.jaffle_shop.fct_orders"]}]}, "lineage": {"nodes": [{"id": "model.jaffle_shop.stg_customers", "type": "model", "sub_type": "view"}, {"id": "model.jaffle_shop.stg_orders", "type": "model", "sub_type": "view"}, {"id": "model.jaffle_shop.stg_payments", "type": "model", "sub_type": "view"}, {"id": "model.jaffle_shop.dim_customers", "type": "model", "sub_type": "table"}, {"id": "model.jaffle_shop.fct_orders", "type": "model", "sub_type": "table"}, {"id": "source.jaffle_shop.jaffle_shop.customers", "type": "source", "sub_type": null}, {"id": "source.jaffle_shop.jaffle_shop.orders", "type": "source", "sub_type": null}, {"id": "source.jaffle_shop.stripe.payment", "type": "source", "sub_type": null}], "edges": [["model.jaffle_shop.stg_customers", "source.jaffle_shop.jaffle_shop.customers"], ["model.jaffle_shop.stg_orders", "source.jaffle_shop.jaffle_shop.orders"], ["model.jaffle_shop.stg_payments", "source.jaffle_shop.stripe.payment"], ["model.jaffle_shop.dim_customers", "model.jaffle_shop.fct_orders"], ["model.jaffle_shop.dim_customers", "model.jaffle_shop.stg_customers"], ["model.jaffle_shop.fct_orders", "model.jaffle_shop.stg_orders"], ["model.jaffle_shop.fct_orders", "model.jaffle_shop.stg_payments"]]}, "invocations": [{"invocation_id": "0bf57f13-3a24-451d-8154-1b0e40c45640", "detected_at": null, "command": "build", "selected": "", "full_refresh": false, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}], "resources_latest_invocation": {"model.jaffle_shop.stg_payments": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.alerts_dbt_source_freshness": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.schema_columns_snapshot": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_artifacts_hashes": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_run_results": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.jaffle_shop.stg_orders": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.elementary_test_results": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.monitors_runs": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_columns": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.snapshot_run_results": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.metrics_anomaly_score": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_models": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.anomaly_threshold_sensitivity": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_snapshots": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.jaffle_shop.stg_customers": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.information_schema_columns": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_exposures": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.model_run_results": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.jaffle_shop.dim_customers": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.metadata": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_sources": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.test_result_rows": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.alerts_anomaly_detection": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.alerts_dbt_tests": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.jaffle_shop.fct_orders": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_metrics": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_tests": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.alerts_schema_changes": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_invocations": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.alerts_dbt_models": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.data_monitoring_metrics": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_seeds": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.enriched_columns": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.dbt_source_freshness_results": "0bf57f13-3a24-451d-8154-1b0e40c45640", "model.elementary.job_run_results": "0bf57f13-3a24-451d-8154-1b0e40c45640"}, "invocations_job_identification": {}, "env": {"project_name": "jaffle_shop", "env": "dev", "warehouse_type": "snowflake"}, "tracking": {"posthog_api_key": "phc_56XBEzZmh02mGkadqLiYW51eECyYKWPyecVwkGdGUfg", "report_generator_anonymous_user_id": "da9b5047-e7cd-4a4b-86ca-c4834c7a5525", "anonymous_warehouse_id": "e0e8ae94ce34734c3a355f3ea04557a169720186585e9a3a445e14a93a190db2"}}